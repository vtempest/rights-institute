"use strict";(self.webpackChunkrights_api_docs=self.webpackChunkrights_api_docs||[]).push([["765"],{9550:function(e,n,t){t.r(n),t.d(n,{frontMatter:()=>l,default:()=>d,toc:()=>c,metadata:()=>r,assets:()=>i,contentTitle:()=>o});var r=JSON.parse('{"id":"functions/Effects/GlowWrapper","title":"GlowWrapper","description":"Documentation / Effects/GlowWrapper","source":"@site/src/functions/Effects/GlowWrapper.md","sourceDirName":"functions/Effects","slug":"/functions/Effects/GlowWrapper","permalink":"/docs/functions/Effects/GlowWrapper","draft":false,"unlisted":false,"editUrl":"https://github.com/vtempest/rights-institute/tree/master/src/functions/Effects/GlowWrapper.md","tags":[],"version":"current","frontMatter":{},"sidebar":"default","previous":{"title":"BorderBeam","permalink":"/docs/functions/Effects/BorderBeam"},"next":{"title":"Meteors","permalink":"/docs/functions/Effects/Meteors"}}'),a=t(5893),s=t(65);let l={},o=void 0,i={},c=[{value:"default",id:"default",level:2},{value:"Component",id:"component",level:3},{value:"Param",id:"param",level:3},{value:"Param",id:"param-1",level:3},{value:"Param",id:"param-2",level:3},{value:"Param",id:"param-3",level:3},{value:"Param",id:"param-4",level:3},{value:"Returns",id:"returns",level:3},{value:"Example",id:"example",level:3}];function p(e){let n={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.a,{href:"/docs/functions/modules",children:"Documentation"})," / Effects/GlowWrapper"]}),"\n",(0,a.jsx)(n.h2,{id:"default",children:"default"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"const default: React.FC<GlowWrapperProps>;\n"})}),"\n",(0,a.jsx)(n.p,{children:"Defined in: Effects/GlowWrapper.tsx:50"}),"\n",(0,a.jsx)(n.p,{children:"GlowWrapper - A component that adds animated glowing border effects"}),"\n",(0,a.jsx)(n.p,{children:"Wraps any content with a rotating conic gradient that creates a\ndynamic glowing effect. The glow color, size, and additional styling\ncan be customized through props. Useful for highlighting important\nUI elements and creating visual interest."}),"\n",(0,a.jsx)(n.h3,{id:"component",children:"Component"}),"\n",(0,a.jsx)(n.h3,{id:"param",children:"Param"}),"\n",(0,a.jsx)(n.p,{children:"The component props"}),"\n",(0,a.jsx)(n.h3,{id:"param-1",children:"Param"}),"\n",(0,a.jsx)(n.p,{children:"The content to wrap with glow effect"}),"\n",(0,a.jsx)(n.h3,{id:"param-2",children:"Param"}),"\n",(0,a.jsx)(n.p,{children:"Additional CSS classes"}),"\n",(0,a.jsx)(n.h3,{id:"param-3",children:"Param"}),"\n",(0,a.jsx)(n.p,{children:"The color of the glow effect"}),"\n",(0,a.jsx)(n.h3,{id:"param-4",children:"Param"}),"\n",(0,a.jsx)(n.p,{children:"The size of the glow wrapper"}),"\n",(0,a.jsx)(n.h3,{id:"returns",children:"Returns"}),"\n",(0,a.jsx)(n.p,{children:"The wrapped content with glow effect"}),"\n",(0,a.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:'<GlowWrapper glowColor="#3b82f6" size="lg">\n  <button>Click me</button>\n</GlowWrapper>\n'})})]})}function d(e={}){let{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}},65:function(e,n,t){t.d(n,{Z:()=>o,a:()=>l});var r=t(7294);let a={},s=r.createContext(a);function l(e){let n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);